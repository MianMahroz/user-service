spring.application.name=caam-user-service

management.endpoints.web.exposure.include=*
spring.main.allow-bean-definition-overriding=true

feign.client.config.default.connectTimeout: 160000000
feign.client.config.default.readTimeout: 160000000
#spring.profiles.active=dev
spring.jpa.show-sql = true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.new-id-generator-mappings=true

# log
log4j.logger.org.hibernate.type=trace
log4j.logger.org.hibernate.type.descriptor.sql=trace
log4j.logger.org.hibernate.SQL=debug

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.url=jdbc:postgresql://localhost:5432/caam_user_service_db?autoReconnect=true&failOverReadOnly=false&maxReconnects=10&useSSL=false
#spring.datasource.username= postgres
#spring.datasource.password= root


# Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url=jdbc:postgresql://caamdbinstance.ccmzrhaccii0.us-east-2.rds.amazonaws.com:5432/caam_user_service_db?autoReconnect=true&failOverReadOnly=false&maxReconnects=10&useSSL=false
spring.datasource.username= CaamAdmin
spring.datasource.password= Encapsulateme1


#spring.datasource.url=jdbc:postgresql://caamdbinstance.ccmzrhaccii0.us-east-2.rds.amazonaws.com:5432/caam_user_service_db?autoReconnect=true&failOverReadOnly=false&maxReconnects=10&useSSL=false
#spring.datasource.username= CaamAdmin
#spring.datasource.password= Encapsulateme1


# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
# Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = update
spring.jpa.open-in-view=false
spring.jpa.hibernate.ddl-auto = update

#host.full.dns.auth.link=http://localhost:2020
#app.client.id=caam-client
#app.client.secret=devglan-secret
#auth.server.schem=http

security.basic.enabled=false
security.user.name=mianmahroz1@gmail.com
security.user.password=12345678
security.oauth2.client.client-id=caam-client
security.oauth2.client.client-secret=devglan-secret
security.oauth2.client.authorized-grant-types=client_credentials,authorization_code,implicit,password,refresh_token
#security.oauth2.client.authorized-grant-types=client_credentials
security.oauth2.client.scope=read,write
security.oauth2.client.auto-approve-scopes=read,write
security.oauth2.authorization.checkTokenAccess=isAuthenticated()
security.oauth2.resource.filter-order=99





# Define a custom port instead of the default 8080
server.port=8082

# Tell Spring Security (if used) to require requests over HTTPS
#security.require-ssl=true

# The format used for the keystore 
#server.ssl.key-store-type=PKCS12
## The path to the keystore containing the certificate
#server.ssl.key-store=classpath:keystore.p12
## The password used to generate the certificate
#server.ssl.key-store-password=caamsolution
## The alias mapped to the certificate
#server.ssl.key-alias=tomcat

