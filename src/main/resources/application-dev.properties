spring.application.name=caam-user-service
#server.port=8082

#eureka.instance.preferIpAddress=true
#eureka.instance.instance-id=3.19.55.32:8082
#eureka.client.instance.preferIpAddress=true
#eureka.instance.instance-id
management.endpoints.web.exposure.include=*
#eureka.client.fetchRegistry=true
#spring.cloud.config.uri=http://localhost:8888
#eureka.instance.preferIpAddress=true

#eureka.client.registerWithEureka: true
#eureka.client.fetch-registry= true    
spring.main.allow-bean-definition-overriding=true
#eureka.client.service-url.default-zone=http://caam-eureka:8761/eureka

feign.client.config.default.connectTimeout: 160000000
feign.client.config.default.readTimeout: 160000000
#eureka.instance.hostname=localhost
# Vault
#spring.cloud.vault.host=localhost
#spring.cloud.vault.port=8200
#spring.cloud.vault.scheme=http
#spring.cloud.vault.authentication=token
#spring.cloud.vault.token=934f9eae-31ff-a8ef-e1ca-4bea9e07aa09
spring.profiles.active=dev
spring.jpa.show-sql = true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.new-id-generator-mappings=true

# log
log4j.logger.org.hibernate.type=trace
log4j.logger.org.hibernate.type.descriptor.sql=trace
log4j.logger.org.hibernate.SQL=debug

# Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url=jdbc:postgresql://caamdbinstance.ccmzrhaccii0.us-east-2.rds.amazonaws.com:5432/caam_user_service_db?autoReconnect=true&failOverReadOnly=false&maxReconnects=10&useSSL=false
spring.datasource.username= CaamAdmin
spring.datasource.password= Encapsulateme1





# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
# Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = update
spring.jpa.open-in-view=false
spring.jpa.hibernate.ddl-auto = none


#spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
#spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
#spring.servlet.multipart.max-file-size=200MB
# Max Request Size
#spring.servlet.multipart.max-request-size=215MB